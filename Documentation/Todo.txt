If state receives a message and can't/shouldn't process it, pass it down the stack to a state that can/should?

Queues and following waypoints/waiting for robots to move are similar behaviors. Still have separate
states, or find a way to use the Follow behavior inside a queue? Queue would just specify the next waypoint and then push the Follow onto the stack

initialize FollowState with Vector2 or list of Vector2s, then pop from followstate once we're there

For queue specifically, robot needs to move around queue to the back of line (don't get in way of first robot)

queue = move to queue staging position, then start of queue, then follow waypoints

Split Main instantiation code into different methods

Create parent Main object and override behaviors as necessary? Or split out common code like ground generation, resource placement, robot placement